{"version":3,"sources":["header/Header.js","post/Post.js","user/User.js","home/Home.js","creat/Creat.js","main/Main.js","App.js","serviceWorker.js","index.js"],"names":["Haeder","state","userInfo","token","login","axios","post","accesstoken","then","res","data","success","setState","localStorage","setItem","id","logout","removeItem","handleChange","event","target","value","getItem","this","className","to","src","alt","onChange","type","onClick","avatar_url","loginname","Component","Post","postlist","ups","textVal","html","handlerVal","inputVal","idd","author_id","myReplay","replies","find","item","action","push","filter","message","error","addcomment","props","match","params","content","get","topic","forEach","textarea","editor","E","customConfig","menus","onchange","create","title","moment","create_at","fromNow","author","visit_count","tab","dangerouslySetInnerHTML","__html","map","key","name","cols","rows","LikeOutlined","style","color","includes","length","ref","User","userlist","console","log","prevProps","location","pathname","score","recent_topics","last_reply_at","recent_replies","Home","postList","page","getType","search","changeSize","history","currentPage","Number","pageNum","allNum","isActive","reply_count","defaultCurrent","defaultPageSize","total","Creat","creat","selectVal","topic_id","placeholder","Main","exact","path","component","withRouter","App","locale","backgroundColor","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e5ee6019.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport './header.css'\r\nclass Haeder extends Component {\r\n    state = { \r\n        userInfo:null,\r\n        token:\"\"\r\n     }\r\n     \r\n     componentDidMount(){\r\n       const token =  localStorage.getItem(\"token\")\r\n       if(token){\r\n        axios.post(`https://cnodejs.org/api/v1/accesstoken`,{accesstoken:token}).then(\r\n            res =>{\r\n                delete res.data.success\r\n                   this.setState({\r\n                       userInfo:res.data\r\n                   })\r\n            }\r\n        )\r\n       }\r\n     }\r\n\r\n    render() { \r\n        const{userInfo,token}=this.state\r\n        \r\n        return (  <div>\r\n            <div className=\"header\">\r\n                <div className='header-inner'>\r\n                <div className='header-inner-left'>\r\n               <li className=\"list2 clearfix\"> <NavLink to=\"/\"><h1 ><img className='logo' src=\"https://www.vue-js.com/public/images/vue.png\" alt=\"\"/>Vuejs</h1></NavLink></li>\r\n               <input className=\"login\" value={token} onChange={this.handleChange} type=\"text\"/>\r\n               </div>\r\n               <div className='header-inner-right'>\r\n               <li className=\"list3 clearfix\"> <NavLink to=\"/\"><button className=\"home\" >首页</button></NavLink></li>\r\n               <NavLink to=\"/topic/create\"><button>发布话题</button></NavLink>\r\n               <button onClick={this.login}>登录</button> \r\n               </div>\r\n               </div>             \r\n                </div>\r\n                {userInfo?<div className=\"mymessage\"><p>个人信息</p><img className=\"avatar_url\" src={userInfo.avatar_url} alt=\"\"/><span>{userInfo.loginname}</span><button onClick={this.logout}>登出</button></div>:\"\"} \r\n                </div>\r\n         );\r\n    }\r\n  \r\n    \r\n    login = ()=>{\r\n    const{token}=this.state\r\n    axios.post(`https://cnodejs.org/api/v1/accesstoken`,{accesstoken:token}).then(\r\n      res =>{\r\n          delete res.data.success         \r\n             this.setState({\r\n                 userInfo:res.data\r\n             })\r\n             localStorage.setItem(\"token\",token)\r\n             localStorage.setItem(\"author_id\",res.data.id)            \r\n      }\r\n      )\r\n     }\r\n\r\n\r\n    logout = ()=>{         \r\n        localStorage.removeItem(\"token\")        \r\n       this.setState({\r\n           userInfo:null\r\n       })\r\n    }\r\n\r\n\r\n\r\n    handleChange = (event)=>{\r\n        this.setState({\r\n            token:event.target.value\r\n        })\r\n    }\r\n}\r\n \r\n\r\n\r\n\r\nexport default Haeder;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport './post.css'\r\nimport { LikeOutlined} from '@ant-design/icons';\r\nimport { message} from 'antd';\r\nimport E from 'wangeditor'\r\nimport { NavLink } from 'react-router-dom';\r\nclass Post extends Component {\r\n    state = { \r\n        postlist:null,\r\n        ups:\"\",\r\n        textVal:\"\"\r\n     }\r\n    componentDidMount(){  \r\n    const {id}= this.props.match.params\r\n        axios.get(`https://cnodejs.org/api/v1/topic/${id}`).then(\r\n            res=>{\r\n             const topic = res.data.data\r\n             topic.replies.forEach(item=>{\r\n                 item.textarea = false\r\n             })  \r\n            this.setState({\r\n               postlist:topic                   \r\n            })\r\n            const editor = new E(this.editor)\r\n            editor.customConfig.menus = [\r\n                'head',\r\n                'bold',\r\n                'italic',\r\n                'underline'\r\n            ]\r\n            editor.customConfig.onchange = html =>{\r\n                this.textVal(html)\r\n            }\r\n            editor.create() \r\n\r\n            }  \r\n        ) \r\n    }\r\n    textVal = (html) =>{\r\n        this.setState({\r\n            textVal:html\r\n        })\r\n    }\r\n    componentDidUpdate(){\r\n        const {id}= this.props.match.params\r\n        axios.get(`https://cnodejs.org/api/v1/topic/${id}`).then(\r\n            res=>{\r\n            this.setState({\r\n               postlist:res.data.data    \r\n            })\r\n            }  \r\n        )      \r\n    }\r\n    render() { \r\n     const{postlist} =this.state\r\n     const author_id = localStorage.getItem(\"author_id\")\r\n     return ( <div className=\"post\">        \r\n    {postlist?<div> <div className=\"header1\"><h2 className=\"title1\">{postlist.title}</h2>·<span>发布于 {moment(postlist.create_at).fromNow()}</span>· <span>作者 {postlist.author.loginname}</span>· <span>{postlist.visit_count} 浏览</span>·<span>来自 {postlist.tab} </span></div><div dangerouslySetInnerHTML={{ __html:postlist.content }}></div><div className='replay'>{postlist.replies.map(item=><li className='everycomment clearfix' key={item.id}><div className='postuser'><NavLink to={`/user/${item.author.loginname}`}><img className=\"postpic\" src={item.author.avatar_url} alt=\"\"/></NavLink ><NavLink to={`/user/${item.author.loginname}`}><span>{item.author.loginname}</span></NavLink ><span>{moment(item.create_at).fromNow()}</span><div dangerouslySetInnerHTML={{ __html:item.content }}></div>{item.textarea?<textarea name=\"\" id=\"\" cols=\"50\" rows=\"3\"></textarea>:\"\"}</div><span className=\"zan\" onClick={()=>this.ups(item.id)} ><LikeOutlined  className=\"heartzan\" style={{color: item.ups.includes(author_id)?\"red\":\"\"}}/> {item.ups.length}</span></li>)}</div><div className=\"addcom\"><div ref={editor =>this.editor = editor} id=\"editor\" className=\"addcomment\"></div><button onClick={this.addcomment}>回复</button></div></div> :''}\r\n        </div> );\r\n        // <span className=\"replay1\" onClick={()=>this.handelTextarea(item.id)}><RotateLeftOutlined/></span>\r\n    }\r\n\r\n\r\n    handlerVal = (event)=>{\r\n        this.setState({\r\n        inputVal:event.target.value\r\n        })\r\n    }\r\n\r\n//    handelTextarea =(id)=>{   \r\n//        const {postlist} = this.state\r\n//        const newplist = {...postlist}\r\n//        newplist.replies.forEach(item=>{\r\n//          if(item.id === id){\r\n//              item.textarea = !item.textarea\r\n//          }\r\n//          else{\r\n//              item.textarea = false\r\n//          }\r\n        \r\n//      })\r\n//      this.setState({\r\n//          postlist:newplist\r\n//      })\r\n//    } \r\n\r\n//点赞\r\n    ups = (idd)=>{\r\n      const token =  localStorage.getItem(\"token\")\r\n      if(token){\r\n      axios.post(`https://cnodejs.org/api/v1/reply/${idd}/ups`,{accesstoken:token}).then(\r\n        res=>{ \r\n        const author_id = localStorage.getItem(\"author_id\")    \r\n        const newslist = {...this.state.postlist}\r\n        const myReplay = newslist.replies.find(item=> item.id === idd) \r\n       if(res.data.action === \"up\"){\r\n         myReplay.ups.push(author_id)\r\n       }\r\n       else{\r\n        myReplay.ups = myReplay.ups.filter(item=> item.id !== author_id)\r\n       }\r\n        }                  \r\n      ) \r\n} else{\r\n    message.error('请先登录')\r\n}\r\n    }\r\n   \r\n//添加评论\r\n addcomment = () =>{\r\n    const {id}= this.props.match.params\r\n    const{textVal}=this.state\r\n    const token =  localStorage.getItem(\"token\")\r\n    axios.post(`https://cnodejs.org/api/v1/topic/${id}/replies`,{accesstoken:token ,content:textVal}).then(\r\n        res=>{\r\n        this.setState({\r\n          ups:res.data,        \r\n        })        \r\n        }    \r\n    )\r\n }\r\n\r\n}\r\n \r\nexport default Post;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport './user.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nclass User extends Component {\r\n    state = { \r\n        userlist:null\r\n     }\r\n     componentDidMount() {\r\n        const {id}= this.props.match.params\r\n        axios.get(`https://cnodejs.org/api/v1/user/${id}`).then(\r\n            res=>{\r\n            this.setState({\r\n               userlist:res.data.data  \r\n            })\r\n            console.log(res.data.data)\r\n            }  \r\n        )     \r\n     }\r\n     componentDidUpdate(prevProps){\r\n        const {id}= this.props.match.params\r\n         if(this.props.location.pathname !== prevProps.location.pathname){\r\n            axios.get(`https://cnodejs.org/api/v1/user/${id}`).then(\r\n                res=>{\r\n                this.setState({\r\n                   userlist:res.data.data  \r\n                })\r\n                }  \r\n            )     \r\n         }\r\n     }\r\n\r\n    render() { \r\n        const{userlist}=this.state\r\n        return ( <div> \r\n            \r\n   {userlist? <div className=\"userpage\" >\r\n       <div className=\"mainpage\">\r\n        <h3>主页</h3><img src={userlist.avatar_url} alt=\"\"/> <span>{userlist.loginname}</span> <br/> <span>{userlist.score} 积分</span> <br/><span>注册时间 {moment(userlist.create_at).fromNow()}</span>\r\n       </div>\r\n       <div className=\"nowtopic\">\r\n        <h3>最近创建的话题</h3>\r\n        {userlist?userlist.recent_topics.map(item=><li key={item.id} className=\"nowlist\"> <NavLink to={`/user/${item.author.loginname}`}><img className=\"author-pic\"  src={item.author.avatar_url} alt=\"\"/> </NavLink> <NavLink to={`/post/${item.id}`}><p  className=\"title\">{item.title}</p></NavLink><span className=\"usertime\">{moment(item.last_reply_at).fromNow()}</span></li>):\"\"}\r\n           </div> \r\n           <div className=\"havetopic\">\r\n        <h3>最近创建的话题</h3>\r\n        {userlist?userlist.recent_replies.map(item=><li key={item.id}  className=\"havelist\"><NavLink to={`/user/${item.author.loginname}`}><img className=\"author-pic\" src={item.author.avatar_url} alt=\"\"/>  </NavLink><NavLink to={`/post/${item.id}`}><p  className=\"title\">{item.title}</p></NavLink><span className=\"usertime\">{moment(item.last_reply_at).fromNow()}</span></li>):\"\"}\r\n           </div> \r\n       </div>:\"\"}\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default User;","import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport './home.css'\r\nimport moment from 'moment'\r\nimport {Pagination} from 'antd'\r\n\r\nclass Home extends Component {\r\n    state = { \r\n        postList:null,\r\n        page:1\r\n     }\r\n    componentDidMount() {\r\n        const{search} = this.props.location\r\n        const{page}=this.state\r\n         const currentPage = search.includes(\"page\")?Number(search.match(/[0-9]{1,2}/)[0]):1\r\n         this.setState({\r\n             page:currentPage\r\n         })\r\n        const type = this.getType()  \r\n        axios.get(`https://cnodejs.org/api/v1/topics?tab=${type}&page=${page}`).then(res=>{\r\n            this.setState({\r\n                postList:res.data,\r\n            })\r\n           }) \r\n     \r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        const{page}=this.state\r\n        const{search} = this.props.location\r\n        const type = this.getType()\r\n        if(prevProps.location.search !== search ){           \r\n            axios.get(`https://cnodejs.org/api/v1/topics?tab=${type}&page=${page}`).then(res=>{\r\n                this.setState({\r\n                    postList:res.data\r\n                })\r\n               }) \r\n            }\r\n          \r\n    }\r\n    render() { \r\n        const{page}=this.state\r\n        const{postList} = this.state\r\n        const{search} = this.props.location\r\n        const type = this.getType()       \r\n        const numArr = [{tab:\"all\",allNum:1015},{tab:\"good\",allNum:15},{tab:\"weex\",allNum:3},{tab:\"share\",allNum:350},{tab:\"ask\",allNum:623},{tab:\"job\",allNum:29}]        \r\n       const pageNum =  numArr.find(type===\" \"?type===\"all\" :item=>item.tab.includes(type)).allNum \r\n        return ( <div>  \r\n            <ul className='list'>\r\n                <li> <NavLink isActive={ ()=> search.includes(\"all\") || search===\"\"} to=\"/?tab=all\">全部</NavLink></li>\r\n                <li> <NavLink isActive={ ()=> search.includes(\"good\") } to=\"/?tab=good\">精华</NavLink></li>\r\n                <li> <NavLink isActive={()=> search.includes(\"weex\") } to=\"/?tab=weex\">weex</NavLink></li>\r\n                <li> <NavLink isActive={()=> search.includes(\"share\")  } to=\"/?tab=share\">分享</NavLink></li>\r\n                <li> <NavLink isActive={()=> search.includes(\"ask\")} to=\"/?tab=ask\">问答</NavLink></li>\r\n                <li> <NavLink isActive ={()=> search.includes(\"job\") } to=\"/?tab=job\">招聘</NavLink></li>\r\n            </ul> \r\n        {postList?<div className=\"main\">{postList.data.map(item => <li className=\"comment\" key={item.id}>\r\n        <NavLink to={`/user/${item.author.loginname}`}><img className=\"auther-pic\" \r\n        src={item.author.avatar_url} alt=\"\"/></NavLink><span className=\"count\">\r\n        {item.reply_count}/{item.visit_count}</span> {type===\"all\" || type===\" \" ?<button className=\"tab\">\r\n        {item.tab===\"share\"?\"分享\":item.tab===\"ask\"?\"问答\":item.tab===\"job\"?\"工作\":\"通用\"}\r\n        </button> :type===\"good\"?<button className=\"good\">精华</button>:\"\"}<NavLink to={`/post/${item.id}`}><p className=\"title\">{item.title}</p></NavLink>\r\n        <span className=\"time\">{moment(item.create_at).fromNow()}</span></li>)}<div><Pagination onChange={this.changeSize}  defaultCurrent={page} defaultPageSize={20}   total={pageNum} /></div></div>:\"\"}\r\n        \r\n        </div>  \r\n        );\r\n    }\r\n    getType = () =>{\r\n        const{search} = this.props.location\r\n         return search.includes('all') || search===\"\"?\"all\": search.includes('good') ? \"good\":search.includes('weex')?\"weex\":search.includes('share')?\"share\":search.includes('ask')?\"ask\":search.includes('job')?\"job\":\"all\"\r\n    }\r\n\r\n    changeSize =(page)=>{     \r\n      const type = this.getType()\r\n     this.props.history.push(`?tab=${type}&page=${page}`)    \r\n     axios.get(`https://cnodejs.org/api/v1/topics?tab=${type}&page=${page}`).then(res=>{\r\n        this.setState({\r\n            postList:res.data\r\n        })\r\n       }) \r\n      \r\n    }\r\n\r\n    // getTopic = (type,page) =>{\r\n    //     axios.get(`https://www.vue-js.com/api/v1/topics?tab=${type}&page=${page}`).then(res=>{\r\n    //         this.setState({\r\n    //             postList:res.data,\r\n    //         })\r\n    //        }) \r\n    // }\r\n}\r\n \r\nexport default  Home;","import React, { Component } from 'react'\r\nimport './creat.css'\r\nimport E from 'wangeditor'\r\nimport axios from 'axios'\r\n// import { message} from 'antd';\r\nclass Creat extends Component {\r\n    state = { \r\n        creat:\"\",\r\n       selectVal:\"\",\r\n       inputVal:\"\",\r\n       textVal:\"\"\r\n     }\r\n     componentDidMount() {\r\n        const editor = new E(this.editor)\r\n        editor.customConfig.menus = [\r\n            'head',\r\n            'bold',\r\n            'italic',\r\n            'underline'\r\n        ]\r\n        editor.customConfig.onchange = html =>{\r\n            this.textVal(html)\r\n        }\r\n        editor.create() \r\n     }\r\n     \r\n    render() { \r\n     const {selectVal,inputVal} =this.state\r\n      return ( <div className=\"creattopic\">\r\n      <h3>发布话题</h3>\r\n      <span>选择板块:</span>   \r\n           <select className=\"select\" value={selectVal} onChange={(event)=>this.handleChange(event,\"selectVal\")}>\r\n            <option value=\"weex\">请选择一个选项</option>\r\n            <option value=\"share\">分享</option>\r\n            <option value=\"ask\">问答</option>\r\n            <option value=\"job\">招聘</option>\r\n          </select>\r\n          <br/>\r\n          <input className=\"title5\" placeholder=\"标题字数 10 字以上\" type=\"text\" value={inputVal} onChange={(event)=>this.handleChange(event,\"inputVal\")}/>\r\n          <div className=\"contant\"><div ref={editor => this.editor =editor}></div>\r\n          <button onClick={this.login}>提交</button></div>\r\n\r\n    </div> );\r\n    }\r\n    handleChange = (event,name) =>{\r\n        this.setState({\r\n        [name]:event.target.value \r\n        })\r\n      \r\n    }\r\n    textVal = (html) =>{\r\n        this.setState({\r\n            textVal:html\r\n        })\r\n    }\r\n    login =()=>{\r\n        const {selectVal,inputVal,textVal} =this.state       \r\n        const token = localStorage.getItem(\"token\")\r\n        // selectVal !== \"ask\" || selectVal !== \"job\" || selectVal !== \"share\"? message.error('请选择一个板块'):!inputVal.length>10? message.error('标题长度要大于10'):!textVal? message.error('内容不能为空'): \r\n        axios.post(\"https://cnodejs.org/api/v1/topics\",{title:inputVal,tab:selectVal,accesstoken:token,content:textVal}).then(\r\n            res=>{\r\n            this.props.history.push(`/post/${res.data.topic_id}`) \r\n            }  \r\n        )          \r\n    }\r\n  }\r\n   \r\n  export default Creat;\r\n","import React, { Component } from 'react';\r\nimport './main.css'\r\nimport { Route} from 'react-router-dom'\r\nimport Post from '../post/Post';\r\nimport User from '../user/User';\r\nimport Home from '../home/Home';\r\nimport {withRouter} from 'react-router-dom'\r\nimport Creat from '../creat/Creat';\r\nclass Main extends Component {\r\n    state = {  }\r\n    render() {       \r\n        return ( <div>\r\n           <Route exact path='/' component={Home}/> \r\n           <Route path=\"/post/:id\" component={Post}/>\r\n           <Route path=\"/user/:id\" component={User}/> \r\n           <Route path=\"/topic/create\" component={Creat}/>           \r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default withRouter(Main);","import React, { Component } from 'react';\r\nimport Haeder from './header/Header';\r\nimport {HashRouter as Router} from 'react-router-dom'\r\nimport Main from './main/Main';\r\nimport moment from \"moment\"\r\nimport 'moment/locale/zh-cn'\r\n\r\nclass App extends Component {\r\n  state = {  }\r\n  render() { \r\n    moment.locale(\"zh-cn\")\r\n    return ( <div style={{backgroundColor:\"#ccc\"}} className=\"App\">\r\n    <Router>\r\n    <Haeder/>\r\n    <Main/>\r\n    </Router>\r\n  </div> );\r\n  }\r\n}\r\n \r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}